// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "bindings": {
      "ctrl-j": "menu::SelectNext",
      "ctrl-n": "menu::SelectNext",
      "ctrl-k": "menu::SelectPrevious",
      "ctrl-p": "menu::SelectPrevious"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "ctrl-a c": "workspace::NewCenterTerminal",
      "ctrl-a -": "workspace::NewTerminal",
      "ctrl-a \\": "pane::SplitRight", // temporary create split pane until split terminal in right is supported. https://github.com/zed-industries/zed/discussions/26243
      "ctrl-a x": "pane::CloseActiveItem",
      "ctrl-a j": "workspace::ActivatePaneDown",
      "ctrl-a l": "workspace::ActivatePaneRight",
      "ctrl-a h": "workspace::ActivatePaneLeft"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      "space e": "workspace::ToggleLeftDock"
      // "q": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "!VimWaiting && vim_mode == insert",
    "bindings": {
      "ctrl-p": "file_finder::Toggle"
    }
  },
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual)",
    "bindings": {
      "space e": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "Editor && vim_mode == normal",
    "bindings": {}
  },
  {
    "context": "Editor && vim_mode == visual",
    "bindings": {}
  },
  {
    "context": "Editor && vim_mode == normal && (vim_operator == none || vim_operator == n) && !VimWaiting",
    "bindings": {
      "space q": "pane::CloseActiveItem"
    }
  },
  {
    "context": "Editor && VimControl && !VimWaiting && !menu",
    "bindings": {
      "ctrl-p": "file_finder::Toggle",
      "g o t": "workspace::OpenInTerminal",
      "ctrl-w z": "workspace::ToggleZoom",
      "space w": "workspace::Save",
      "space r n": "editor::Rename",
      "space c a": "editor::ToggleCodeActions",
      "space g b": "editor::ToggleGitBlame",
      "shift-k": "editor::Hover",
      "g c c": "editor::ToggleComments",
      "g d": "editor::GoToDefinition",
      "space g d": "editor::GoToDefinitionSplit",
      "g D": "editor::GoToDeclaration",
      "space g D": "editor::GoToDeclarationSplit",
      "g r": "editor::FindAllReferences",
      "g i": "editor::GoToImplementation",
      "space g i": "editor::GoToImplementationSplit",
      "g t": "editor::GoToTypeDefinition",
      "j": [
        "vim::Down",
        {
          "display_lines": true
        }
      ],
      "k": [
        "vim::Up",
        {
          "display_lines": true
        }
      ]
    }
  },
  {
    "context": "Editor && showing_completions",
    "bindings": {
      "enter": "editor::ConfirmCompletion",
      "ctrl-j": "editor::ContextMenuNext",
      "ctrl-n": "editor::ContextMenuNext",
      "ctrl-k": "editor::ContextMenuPrevious",
      "ctrl-p": "editor::ContextMenuPrevious"
    }
  },
  {
    "context": "Pane",
    "bindings": {
      "cmd-1": ["pane::ActivateItem", 0],
      "cmd-2": ["pane::ActivateItem", 1],
      "cmd-3": ["pane::ActivateItem", 2],
      "cmd-4": ["pane::ActivateItem", 3],
      "cmd-5": ["pane::ActivateItem", 4],
      "cmd-6": ["pane::ActivateItem", 5],
      "cmd-7": ["pane::ActivateItem", 6],
      "cmd-8": ["pane::ActivateItem", 7],
      "cmd-9": ["pane::ActivateItem", 8],
      "ctrl-a 1": ["pane::ActivateItem", 0],
      "ctrl-a 2": ["pane::ActivateItem", 1],
      "ctrl-a 3": ["pane::ActivateItem", 2],
      "ctrl-a 4": ["pane::ActivateItem", 3],
      "ctrl-a 5": ["pane::ActivateItem", 4],
      "ctrl-a 6": ["pane::ActivateItem", 5],
      "ctrl-a 7": ["pane::ActivateItem", 6],
      "ctrl-a 8": ["pane::ActivateItem", 7],
      "ctrl-a 9": ["pane::ActivateItem", 8]
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-shift-c": "terminal::Copy",
      "ctrl-shift-v": "terminal::Paste",
      "ctrl-a k": "workspace::ActivatePaneUp",
      "ctrl-a j": "workspace::ActivatePaneDown",
      "ctrl-a l": "workspace::ActivatePaneRight",
      "ctrl-a h": "workspace::ActivatePaneLeft",
      "ctrl-a z": "workspace::ToggleZoom"
    }
  }
]
