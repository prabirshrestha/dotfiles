#!/bin/bash
set -e

arch="$(uname -m)"
unameOut="$(uname -s)"
case "${unameOut}" in
  Linux*)     platform=linux;;
  Darwin*)    platform=mac;;
  CYGWIN*)    platform=cygwin;;
  MINGW*)     platform=mingw;;
  *)          platform="UNKNOWN:${unameOut}"
esac

if [ "$platform" == "mac" ]; then
  echo "Detected MacOS"

  if ! command -v brew &> /dev/null; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    eval "$(/opt/homebrew/bin/brew shellenv)"
  fi

  brew install \
    age \
    aider \
    bacon \
    bat \
    axodotdev/tap/cargo-dist \
    cargo-make \
    cargo-watch \
    code2prompt \
    deskpad \
    docker \
    docker-credential-helper \
    docker-compose \
    dotter \
    efm-langserver \
    fd \
    ffmpeg \
    fish \
    fisher \
    flameshot \
    fnm \
    fzf \
    gh \
    hyperfine \
    jq \
    just \
    keycastr \
    lazydocker \
    llama.cpp \
    llm \
    localai \
    lnav \
    mise \
    poppler \
    portaudio \
    pnpm \
    ripgrep \
    rustup \
    satyrn \
    sops \
    television \
    tree \
    utm \
    uv \
    vim \
    vlc \
    wezterm \
    wget \
    yq \
    zoxide \
    ;

  brew install dotenvx/brew/dotenvx
  brew install --cask \
    ghostty \
    ollama-app \
    rancher \
  ;

  brew tap hashicorp/tap
  brew install hashicorp/tap/nomad
  if command -v rustup &> /dev/null; then
    rustup component add rust-src rust-analyzer
  fi

  brew tap versatiles-org/versatiles
  brew install versatiles

  brew install --cask \
    disk-inventory-x \
    keepassxc \
    zed@preview \
  ;

  brew install turbot/tap/steampipe
  steampipe plugin install azuredevops

  if [[ "$(scutil --get ComputerName)" == *"Work"* ]]; then
    brew install \
      gettext \
      azure-data-studio \
      azure-cli \
      ;
    brew install --cask yubico-yubikey-manager
  else
    brew install \
      betterzip \
      ;
  fi
elif [ "$platform" == "linux" ]; then
  echo "Linux Detected"
  if [ -f "/etc/arch-release" ]; then
    echo "ArchLinux detected"

    if [ "$EUID" -eq 0 ]; then
      read -p "Enter non-root username: " USERNAME
      if id "$USERNAME" >/dev/null 2>&1; then
        echo 'user found'
      else
        useradd -m -G wheel "$USERNAME"
        passwd "$USERNAME"
      fi
      pacman -Sy sudo --noconfirm
      sed -i '/%wheel ALL=(ALL:ALL) ALL/s/^#//' /etc/sudoers
    else
      USERNAME=$(whoami)
    fi
    if ! command -v paru &> /dev/null; then
      sudo pacman -S --needed --noconfirm base-devel git
      sudo rm -rf /tmp/paru-bin
      sudo -u "$USERNAME" git clone https://aur.archlinux.org/paru-bin.git /tmp/paru-bin
      pushd /tmp/paru-bin
      sudo -u "$USERNAME" makepkg -si --noconfirm
      popd
      rm -rf /tmp/paru-bin
    fi
    sudo -u "$USERNAME" paru -Sy --noconfirm \
      age \
      bspwm \
      curl \
      chromium \
      git \
      google-chrome \
      gvim \
      linux-headers \
      lua \
      picom \
      polybar \
      rofi \
      sxhkd \
      unzip \
      wezterm \
      xsel
    if [[ $arch != "aarch64" ]]; then
      sudo -u "$USERNAME" paru -Sy --noconfirm \
        dotter-rs-bin
    fi
    sudo -u "$USERNAME" paru -Sy --noconfirm xorg xfce4 sddm
    sudo -u "$USERNAME" systemctl enable sddm
  elif [ "$(grep -Ei 'debian|buntu|mint' /etc/*release)" ]; then
   echo "Debian based distro detected"
   sudo apt-get update
   sudo apt-get install -y \
     age \
     build-essential \
     curl \
     git \
     vim
  else
    echo "Unsupported Linux Distro"
    exit 1
  fi
fi
